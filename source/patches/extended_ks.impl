#include "unaligned.h"

[[gnu::noinline]]
static void Call(ActorBase& actor, const char* params)
{
	ReadUnaligned<void(*)(ActorBase&)>(params)(actor);
}

IMPLEMENT_ID(Camera, 39)
(Camera& cam, const char* params, short minFrame, short maxFrame)
{
	Call(cam, params);
}

IMPLEMENT_ID(Player, 14)
(Player& player, const char* params, short minFrame, short maxFrame)
{
	Call(player, params);
}

asm("AdvancePlayerModelAnim = 0x020bedd4");

constinit int freezeFrame = -1;
extern "C" void AdvancePlayerModelAnim(Player& player);

IMPLEMENT(PlayWindSound<>)
(Player& player, const char* params, short minFrame, short maxFrame)
{
	player.playLongUniqueID = Sound::PlayLong(player.playLongUniqueID, 3, 0x90, player.camSpacePos, 0);
}

constinit int8_t entranceMode = -1;

IMPLEMENT(SetEntranceMode)
(Player& player, const char* params, short minFrame, short maxFrame)
{
	entranceMode = *params;
}

asm(R"(
nsub_0200e664:
	ldr   r1, =entranceMode
	ldrb  r1, [r1]
	cmp   r1, #0xff
	movne r12, r1
	mvn   r1, #0
	b     0x0200e668
)");
